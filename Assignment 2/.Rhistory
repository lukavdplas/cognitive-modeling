category_vectors <- read.table("./data/CategoryVectors")
category_labels <- read.table("./data/CategoryLabels")
#make RDM for category
category_rdm <- function(cat_vector) {
rdm <- matrix(nrow = length(cat_vector), ncol = length(cat_vector))
for (i in 1:length(cat_vector)) {
for(j in 1:length(cat_vector)) {
rdm[i,j] <- as.numeric(cat_vector[i] == cat_vector[j])
}
}
rdm
}
category_rdm_for_index <- function(index) {
category_rdm(category_vectors[,index])
}
different in one category
compare_category <- function(cat_index, correlations, filter = 0) {
cat_rdm <- category_rdm_for_index(cat_index)
same_cat <- c()
diff_cat <- c()
for (i in 1:nrow(cat_rdm)) {
for (j in 1:ncol(cat_rdm)) {
if (i < j) { #remove i == j and make sure that i,j and j,i are not both included
#check if i,j should be included based on filter
if (filter > 0) {
if (category_vectors[i,filter] == 0 | category_vectors[j,filter] == 0) {
include <- FALSE
}
else { include <- TRUE}
}
else { include <- TRUE }
#add correlation[i,j] to vector
if (include) {
if (cat_rdm[i,j] == 1) {
same_cat <- c(same_cat, c(correlations[i,j]))
}
else {
diff_cat <- c(diff_cat, c(correlations[i,j]))
}
}
}
}
}
#print descriptives
print('Same category:')
print(c(mean(same_cat), sd(same_cat)))
print('Different category:')
print(c(mean(diff_cat), sd(diff_cat)))
#perform t-test
t.test(same_cat, diff_cat, alternative = "two.sided", paired = FALSE)
}
perform_anova <- function(cat1, cat2, correlations) {
cat1_rdm <- category_rdm_for_index(cat1)
cat2_rdm <- category_rdm_for_index(cat2)
results <- data.frame()
for (i in 1:nrow(correlations)) {
for (j in 1:ncol(correlations)) {
if (i < j) { #remove i == j and make sure that i,j and j,i are not both included
#add correlation to dataframe
results <- rbind(results, c(cat1_rdm[i,j], cat2_rdm[i,j], correlations[i,j])                         )
}
}
}
colnames(results) <- c("same_cat1", "same_cat2", "correlation")
anova <- aov(correlation ~ same_cat1 + same_cat2 + same_cat1:same_cat2, data = results)
summary(anova)
}
macaque <- read.table('./data/NeuroRDM')
macaque_rdm <- unname(macaque)
macaque_rdm <- as.matrix(macaque_rdm)
plot_macaque <- function() {
melted_data <- melt(macaque_rdm)
plot <- ggplot(data = melted_data, aes(Var2, Var1, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "darkslategray", high = "darkseagreen1", name = "Dissimilarity", limit = c(0, 10)) +
xlab("image") +
ylab("image") +
theme_minimal()
plot
}
compare_rdms <- function(rdm1, rdm2, filter = 0) {
#give the pairwise values
rdm1_values <- c()
rdm2_values <- c()
for (i in 1:nrow(rdm1)) {
for (j in 1:ncol(rdm1)) {
if (i < j) {
#check if i,j should be included based on filter
if (filter > 0) {
if (category_vectors[i,filter] == 0 | category_vectors[j,filter] == 0) {
include <- FALSE
}
else { include <- TRUE}
}
else { include <- TRUE }
#add to vectors
if (include) {
rdm1_values <- c(rdm1_values, c(rdm1[i,j]))
rdm2_values <- c(rdm2_values, c(rdm2[i,j]))
}
}
}
}
list(rdm1_values, rdm2_values)
}
correlate_rdms <- function(rdm1, rdm2, filter = 0) {
values <- compare_rdms(rdm1, rdm2, filter)
cor.test(values[[1]], values[[2]])
}
plot_human_macaque_scatter <- function() {
values <- compare_rdms(mean_rdm, macaque_rdm)
human_macaque_df <- data.frame(Human = values[[1]], Macaque = values[[2]])
ggplot(data = human_macaque_df) +
geom_point(aes(x = Human, y = Macaque), color = "darkseagreen4", size=0.5) +
theme_classic()
}
plot_human_macaque_scatter()
correlate_rdms(mean_rdm, macaque_rdm)
correlate_rdms(mean_rdm, macaque_rdm, filter = 1)
correlate_rdms(mean_rdm, macaque_rdm, filter = 2)
behaviour <- read.table('./data/BehaviourRDM')
behaviour_rdm <- unname(behaviour)
behaviour_rdm <- as.matrix(behaviour_rdm)
plot_behaviour_rdm <- function () {
melted_data <- melt(behaviour_rdm)
plot <- ggplot(data = melted_data, aes(Var2, Var1, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "darkslategray", high = "darkseagreen1", name = "Dissimilarity", limit = c(0, 0.4)) +
xlab("image") +
ylab("image") +
theme_minimal()
plot
}
plot_neural_behaviour_scatter <- function() {
values <- compare_rdms(mean_rdm, behaviour_rdm)
df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_scatter()
category_labels
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(dim(animate_values))
df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(dim(animate_values))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(animate_values)
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(len(animate_values))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(length(animate_values))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(width(animate_values))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(nrow(animate_values))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
print(length(animate_values[[1]]))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
c(1) * 5
rep(1, 5)
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", len(animate_values[[1]])))
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", len(animate_values[[1]])))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", nrow(animate_values[[1]])))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <= length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
animate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
#df <- data.frame(Neural = values[[1]], Behaviour = values[[2]])
#ggplot(data = df) +
#  geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
#  theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
animate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
animate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]]))
print(length(all_values))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]]))
print(length(all_values))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
compare_rdms_crosscat <- function(rdm1, rdm2, filter) {
#compare 2 RDMS on the images with DIFFERENT values for the filter category
#give the pairwise values
rdm1_values <- c()
rdm2_values <- c()
for (i in 1:nrow(rdm1)) {
for (j in 1:ncol(rdm1)) {
if (i < j) {
#check if i,j should be included based on filter
if (category_vectors[i,filter] == 0 != category_vectors[j,filter]) {
#add to vectors
rdm1_values <- c(rdm1_values, c(rdm1[i,j]))
rdm2_values <- c(rdm2_values, c(rdm2[i,j]))
}
}
}
}
list(rdm1_values, rdm2_values)
}
compare_rdms_crosscat <- function(rdm1, rdm2, filter) {
#compare 2 RDMS on the images with DIFFERENT values for the filter category
#give the pairwise values
rdm1_values <- c()
rdm2_values <- c()
for (i in 1:nrow(rdm1)) {
for (j in 1:ncol(rdm1)) {
if (i < j) {
#check if i,j should be included based on filter
if (category_vectors[i,filter] != category_vectors[j,filter]) {
#add to vectors
rdm1_values <- c(rdm1_values, c(rdm1[i,j]))
rdm2_values <- c(rdm2_values, c(rdm2[i,j]))
}
}
}
}
list(rdm1_values, rdm2_values)
}
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour, color = Animacy), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
diff_values <- compare_rdms_crosscat(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(diff_values[[1]])
different_values <- list(diff_values[[1]], diff_values[[2]], rep("different", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]], diff_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]], diff_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]], diff_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour, color = Animacy), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
diff_values <- compare_rdms_crosscat(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(diff_values[[1]])
diff_values <- list(diff_values[[1]], diff_values[[2]], rep("different", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]], diff_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]], diff_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]], diff_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour, color = Animacy), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate", rows))
diff_values <- compare_rdms_crosscat(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(diff_values[[1]])
diff_values <- list(diff_values[[1]], diff_values[[2]], rep("animate/inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]], diff_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]], diff_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]], diff_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour, color = Animacy), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("animate vs animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("inanimate vs inanimate", rows))
diff_values <- compare_rdms_crosscat(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(diff_values[[1]])
diff_values <- list(diff_values[[1]], diff_values[[2]], rep("animate vs inanimate", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]], diff_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]], diff_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]], diff_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour, color = Animacy), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
plot_neural_behaviour_animacy <- function() {
animate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(animate_values[[1]])
animate_values <- list(animate_values[[1]], animate_values[[2]], rep("both animate", rows))
inanimate_values <- compare_rdms(mean_rdm, behaviour_rdm, filter = 2)
rows <- length(inanimate_values[[1]])
inanimate_values <- list(inanimate_values[[1]], inanimate_values[[2]], rep("both inanimate", rows))
diff_values <- compare_rdms_crosscat(mean_rdm, behaviour_rdm, filter = 1)
rows <- length(diff_values[[1]])
diff_values <- list(diff_values[[1]], diff_values[[2]], rep("different animacy", rows))
all_values <- list(c(animate_values[[1]], inanimate_values[[1]], diff_values[[1]]),
c(animate_values[[2]], inanimate_values[[2]], diff_values[[2]]),
c(animate_values[[3]], inanimate_values[[3]], diff_values[[3]]))
df <- data.frame(Neural = all_values[[1]], Behaviour = all_values[[2]], Animacy = all_values[[3]])
ggplot(data = df) +
geom_point(aes(x = Neural, y = Behaviour, color = Animacy), size=0.5) +
theme_classic()
}
plot_neural_behaviour_animacy()
